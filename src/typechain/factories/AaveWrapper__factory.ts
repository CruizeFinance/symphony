/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AaveWrapper, AaveWrapperInterface } from "../AaveWrapper";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "AddAsset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "ratio",
        type: "uint256",
      },
    ],
    name: "BorrowRatioChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "priceOracle",
        type: "address",
      },
    ],
    name: "addDepositAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "borrowRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ratio",
        type: "uint256",
      },
    ],
    name: "changeBorrowRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "depositAssets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "repay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260c860035534801561001557600080fd5b5061001f33610028565b60018055610078565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611024806100876000396000f3fe60806040526004361061009c5760003560e01c806374c405971161006457806374c405971461012b5780638da5cb5b14610154578063b663dfc414610186578063ea0c50b2146101a6578063f2fde38b146101dc578063f3fef3a3146101fc57600080fd5b80631ab69d11146100a1578063371fd8e6146100c35780633f0ead02146100e357806347e7ef2414610103578063715018a614610116575b600080fd5b3480156100ad57600080fd5b506100c16100bc366004610c61565b61021c565b005b3480156100cf57600080fd5b506100c16100de366004610c61565b61029f565b3480156100ef57600080fd5b506100c16100fe366004610c96565b610405565b6100c1610111366004610cb8565b6105d7565b34801561012257600080fd5b506100c16108ae565b34801561013757600080fd5b5061014160035481565b6040519081526020015b60405180910390f35b34801561016057600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161014b565b34801561019257600080fd5b506100c16101a1366004610ce2565b6108c2565b3480156101b257600080fd5b5061016e6101c1366004610c96565b6002602052600090815260409020546001600160a01b031681565b3480156101e857600080fd5b506100c16101f7366004610c96565b610957565b34801561020857600080fd5b506100c1610217366004610cb8565b6109d0565b610224610b1a565b600354811415604051806040016040528060018152602001600d60fa1b8152509061026b5760405162461bcd60e51b81526004016102629190610d15565b60405180910390fd5b50600381905560405181907f506d6c6b51bc8c5eb7977a5d7bf100806018f28a2d1916615c60075f247f413290600090a250565b6102a7610b1a565b600260015414156102ca5760405162461bcd60e51b815260040161026290610d6a565b600260015560405163095ea7b360e01b8152737d2768de32b0b80b7a3454c06bdac94a69ddc7a960048201526024810182905273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb489063095ea7b3906044016020604051808303816000875af115801561033b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035f9190610da1565b5060405163573ade8160e01b815273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4860048201526024810182905260026044820152306064820152737d2768de32b0b80b7a3454c06bdac94a69ddc7a99063573ade81906084016020604051808303816000875af11580156103d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fd9190610dc3565b505060018055565b61040d610b1a565b600260015414156104305760405162461bcd60e51b815260040161026290610d6a565b6002600155604051632fe4a15f60e21b8152306004820152600090737d2768de32b0b80b7a3454c06bdac94a69ddc7a99063bf92857c9060240160c060405180830381865afa158015610487573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ab9190610ddc565b5050506001600160a01b0380861660009081526002602052604081205492955093506104d8925016610b74565b90506000670de0b6b3a7640000836104ef84610be8565b6104f99190610e3c565b6105039190610e5b565b9050600061051664e8d4a5100083610e5b565b905060006103e86003548361052b9190610e3c565b6105359190610e5b565b60405163a415bcad60e01b815273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486004820152602481018290526002604482015260006064820152306084820152909150737d2768de32b0b80b7a3454c06bdac94a69ddc7a99063a415bcad9060a401600060405180830381600087803b1580156105b357600080fd5b505af11580156105c7573d6000803e3d6000fd5b5050600180555050505050505050565b6105df610b1a565b600260015414156106025760405162461bcd60e51b815260040161026290610d6a565b600260018181556001600160a01b0384811660009081526020938452604090819020548151808301909252928152603160f81b938101939093521661065a5760405162461bcd60e51b81526004016102629190610d15565b5034156106ed5760405163474cf53d60e01b8152737d2768de32b0b80b7a3454c06bdac94a69ddc7a960048201523060248201526000604482015273cc9a0b7c43dc2a5f023bb9b738e45b0ef6b06e049063474cf53d9034906064016000604051808303818588803b1580156106cf57600080fd5b505af11580156106e3573d6000803e3d6000fd5b50505050506103fd565b6040805180820190915260018152601960f91b6020820152816107235760405162461bcd60e51b81526004016102629190610d15565b506040516323b872dd60e01b81523360048201523060248201526044810182905282906001600160a01b038216906323b872dd906064016020604051808303816000875af1158015610779573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079d9190610da1565b5060405163095ea7b360e01b8152737d2768de32b0b80b7a3454c06bdac94a69ddc7a96004820152602481018390526001600160a01b0382169063095ea7b3906044016020604051808303816000875af11580156107ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108239190610da1565b5060405163e8eda9df60e01b81526001600160a01b03821660048201526024810183905230604482015260006064820152737d2768de32b0b80b7a3454c06bdac94a69ddc7a99063e8eda9df90608401600060405180830381600087803b15801561088d57600080fd5b505af11580156108a1573d6000803e3d6000fd5b5050505050505060018055565b6108b6610b1a565b6108c06000610c11565b565b6108ca610b1a565b6001600160a01b0382811660009081526002602052604090205416156108ef57600080fd5b6001600160a01b0382811660008181526002602090815260409182902080546001600160a01b031916948616949094179093555181815290917fb9e746ec3f52799088442f71f6fe7c9c3c113f3077abc2b47a0db8d5e3ee8259910160405180910390a25050565b61095f610b1a565b6001600160a01b0381166109c45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610262565b6109cd81610c11565b50565b6109d8610b1a565b600260015414156109fb5760405162461bcd60e51b815260040161026290610d6a565b6002600155604051632fe4a15f60e21b8152306004820152600090737d2768de32b0b80b7a3454c06bdac94a69ddc7a99063bf92857c9060240160c060405180830381865afa158015610a52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a769190610ddc565b5050604051631a4ca37b60e21b81526001600160a01b038816600482015260248101879052306044820152929450737d2768de32b0b80b7a3454c06bdac94a69ddc7a993506369328dec926064019150610acd9050565b6020604051808303816000875af1158015610aec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b109190610dc3565b5050600180555050565b6000546001600160a01b031633146108c05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610262565b600080829050806001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610bb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bdc9190610e97565b50919695505050505050565b6000610bf660086012610ee7565b610c0190600a610fe2565b610c0b9083610e3c565b92915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610c7357600080fd5b5035919050565b80356001600160a01b0381168114610c9157600080fd5b919050565b600060208284031215610ca857600080fd5b610cb182610c7a565b9392505050565b60008060408385031215610ccb57600080fd5b610cd483610c7a565b946020939093013593505050565b60008060408385031215610cf557600080fd5b610cfe83610c7a565b9150610d0c60208401610c7a565b90509250929050565b600060208083528351808285015260005b81811015610d4257858101830151858201604001528201610d26565b81811115610d54576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600060208284031215610db357600080fd5b81518015158114610cb157600080fd5b600060208284031215610dd557600080fd5b5051919050565b60008060008060008060c08789031215610df557600080fd5b865195506020870151945060408701519350606087015192506080870151915060a087015190509295509295509295565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610e5657610e56610e26565b500290565b600082610e7857634e487b7160e01b600052601260045260246000fd5b500490565b805169ffffffffffffffffffff81168114610c9157600080fd5b600080600080600060a08688031215610eaf57600080fd5b610eb886610e7d565b9450602086015193506040860151925060608601519150610edb60808701610e7d565b90509295509295909350565b600082821015610ef957610ef9610e26565b500390565b600181815b80851115610f39578160001904821115610f1f57610f1f610e26565b80851615610f2c57918102915b93841c9390800290610f03565b509250929050565b600082610f5057506001610c0b565b81610f5d57506000610c0b565b8160018114610f735760028114610f7d57610f99565b6001915050610c0b565b60ff841115610f8e57610f8e610e26565b50506001821b610c0b565b5060208310610133831016604e8410600b8410161715610fbc575081810a610c0b565b610fc68383610efe565b8060001904821115610fda57610fda610e26565b029392505050565b6000610cb18383610f4156fea2646970667358221220822c9545f3633a11825b046827d83f4724f25379917867a62cdd12ed9ea8053964736f6c634300080a0033";

export class AaveWrapper__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AaveWrapper> {
    return super.deploy(overrides || {}) as Promise<AaveWrapper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AaveWrapper {
    return super.attach(address) as AaveWrapper;
  }
  connect(signer: Signer): AaveWrapper__factory {
    return super.connect(signer) as AaveWrapper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AaveWrapperInterface {
    return new utils.Interface(_abi) as AaveWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AaveWrapper {
    return new Contract(address, _abi, signerOrProvider) as AaveWrapper;
  }
}
