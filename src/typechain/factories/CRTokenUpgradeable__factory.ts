/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CRTokenUpgradeable,
  CRTokenUpgradeableInterface,
} from "../CRTokenUpgradeable";

const _abi = [
  {
    inputs: [],
    name: "EmptyName",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptySymbol",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroDecimal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimal_",
        type: "uint8",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061116d806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a25780639dc29fac116100715780639dc29fac1461021a578063a457c2d71461022d578063a9059cbb14610240578063dd62ed3e14610253578063f2fde38b1461026657600080fd5b806370a08231146101c6578063715018a6146101ef5780638da5cb5b146101f757806395d89b411461021257600080fd5b806323b872dd116100de57806323b872dd14610178578063313ce5671461018b57806339509351146101a057806340c10f19146101b357600080fd5b806306fdde0314610110578063095ea7b31461012e5780631624f6c61461015157806318160ddd14610166575b600080fd5b610118610279565b6040516101259190611003565b60405180910390f35b61014161013c366004610f60565b61030b565b6040519015158152602001610125565b61016461015f366004610f89565b610323565b005b6035545b604051908152602001610125565b610141610186366004610f25565b6104bd565b60975460405160ff9091168152602001610125565b6101416101ae366004610f60565b6104e1565b6101646101c1366004610f60565b610503565b61016a6101d4366004610ed2565b6001600160a01b031660009081526033602052604090205490565b610164610519565b6065546040516001600160a01b039091168152602001610125565b61011861052d565b610164610228366004610f60565b61053c565b61014161023b366004610f60565b61054e565b61014161024e366004610f60565b6105c9565b61016a610261366004610ef3565b6105d7565b610164610274366004610ed2565b610602565b606060368054610288906110d0565b80601f01602080910402602001604051908101604052809291908181526020018280546102b4906110d0565b80156103015780601f106102d657610100808354040283529160200191610301565b820191906000526020600020905b8154815290600101906020018083116102e457829003601f168201915b5050505050905090565b60003361031981858561067b565b5060019392505050565b600054610100900460ff16158080156103435750600054600160ff909116105b8061035d5750303b15801561035d575060005460ff166001145b6103c55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156103e8576000805461ff0019166101001790555b835160001061040a57604051632ef1310560e01b815260040160405180910390fd5b825160001061042c57604051630cc613fb60e11b815260040160405180910390fd5b8160ff1660001061045057604051635780724d60e11b815260040160405180910390fd5b61045a84846107a0565b6104626107d1565b6097805460ff191660ff841617905580156104b7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6000336104cb858285610800565b6104d6858585610874565b506001949350505050565b6000336103198185856104f483836105d7565b6104fe91906110a1565b61067b565b61050b610a42565b6105158282610a9c565b5050565b610521610a42565b61052b6000610b7b565b565b606060378054610288906110d0565b610544610a42565b6105158282610bcd565b6000338161055c82866105d7565b9050838110156105bc5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103bc565b6104d6828686840361067b565b600033610319818585610874565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b61060a610a42565b6001600160a01b03811661066f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103bc565b61067881610b7b565b50565b6001600160a01b0383166106dd5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103bc565b6001600160a01b03821661073e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103bc565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600054610100900460ff166107c75760405162461bcd60e51b81526004016103bc90611056565b6105158282610d18565b600054610100900460ff166107f85760405162461bcd60e51b81526004016103bc90611056565b61052b610d66565b600061080c84846105d7565b905060001981146104b757818110156108675760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103bc565b6104b7848484840361067b565b6001600160a01b0383166108d85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103bc565b6001600160a01b03821661093a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103bc565b6001600160a01b038316600090815260336020526040902054818110156109b25760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103bc565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906109e99084906110a1565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a3591815260200190565b60405180910390a36104b7565b6065546001600160a01b0316331461052b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103bc565b6001600160a01b038216610af25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103bc565b8060356000828254610b0491906110a1565b90915550506001600160a01b03821660009081526033602052604081208054839290610b319084906110a1565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610c2d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103bc565b6001600160a01b03821660009081526033602052604090205481811015610ca15760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103bc565b6001600160a01b0383166000908152603360205260408120838303905560358054849290610cd09084906110b9565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610793565b505050565b600054610100900460ff16610d3f5760405162461bcd60e51b81526004016103bc90611056565b8151610d52906036906020850190610d96565b508051610d13906037906020840190610d96565b600054610100900460ff16610d8d5760405162461bcd60e51b81526004016103bc90611056565b61052b33610b7b565b828054610da2906110d0565b90600052602060002090601f016020900481019282610dc45760008555610e0a565b82601f10610ddd57805160ff1916838001178555610e0a565b82800160010185558215610e0a579182015b82811115610e0a578251825591602001919060010190610def565b50610e16929150610e1a565b5090565b5b80821115610e165760008155600101610e1b565b80356001600160a01b0381168114610e4657600080fd5b919050565b600082601f830112610e5b578081fd5b813567ffffffffffffffff80821115610e7657610e76611121565b604051601f8301601f19908116603f01168101908282118183101715610e9e57610e9e611121565b81604052838152866020858801011115610eb6578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215610ee3578081fd5b610eec82610e2f565b9392505050565b60008060408385031215610f05578081fd5b610f0e83610e2f565b9150610f1c60208401610e2f565b90509250929050565b600080600060608486031215610f39578081fd5b610f4284610e2f565b9250610f5060208501610e2f565b9150604084013590509250925092565b60008060408385031215610f72578182fd5b610f7b83610e2f565b946020939093013593505050565b600080600060608486031215610f9d578283fd5b833567ffffffffffffffff80821115610fb4578485fd5b610fc087838801610e4b565b94506020860135915080821115610fd5578384fd5b50610fe286828701610e4b565b925050604084013560ff81168114610ff8578182fd5b809150509250925092565b6000602080835283518082850152825b8181101561102f57858101830151858201604001528201611013565b818111156110405783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082198211156110b4576110b461110b565b500190565b6000828210156110cb576110cb61110b565b500390565b600181811c908216806110e457607f821691505b6020821081141561110557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220410cdf06cd7fc414ad7d4ad186296d17455af40fe30dd12790b580cba1daf38564736f6c63430008040033";

export class CRTokenUpgradeable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CRTokenUpgradeable> {
    return super.deploy(overrides || {}) as Promise<CRTokenUpgradeable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CRTokenUpgradeable {
    return super.attach(address) as CRTokenUpgradeable;
  }
  connect(signer: Signer): CRTokenUpgradeable__factory {
    return super.connect(signer) as CRTokenUpgradeable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CRTokenUpgradeableInterface {
    return new utils.Interface(_abi) as CRTokenUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CRTokenUpgradeable {
    return new Contract(address, _abi, signerOrProvider) as CRTokenUpgradeable;
  }
}
