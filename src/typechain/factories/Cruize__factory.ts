/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Cruize, CruizeInterface } from "../Cruize";

const _abi = [
  {
    inputs: [],
    name: "AssetAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "AssetNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "SameBorrowRatio",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "AddAsset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_ratio",
        type: "uint256",
      },
    ],
    name: "BorrowRatioChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "_decimal",
        type: "uint8",
      },
    ],
    name: "CreateToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "DepositEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "WithdrawEvent",
    type: "event",
  },
  {
    inputs: [],
    name: "borrowRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ratio",
        type: "uint256",
      },
    ],
    name: "changeBorrowRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "crContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "reserve",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOracle",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "decimal",
        type: "uint8",
      },
    ],
    name: "createToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cruize_wallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "reserve",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cruize_wallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_crContract",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lpTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "oracles",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceFloor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "repay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_floor",
        type: "uint256",
      },
    ],
    name: "setPriceFloor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526109c4609a5534801561001657600080fd5b50611fef806100266000396000f3fe6080604052600436106100f65760003560e01c80636e553f651161008a5780638da5cb5b116100595780638da5cb5b14610283578063addd5099146102a1578063b17b658d146102d7578063f2fde38b1461030d57600080fd5b80636e553f6514610225578063715018a614610238578063717edf281461024d57806374c405971461026d57600080fd5b8063371fd8e6116100c6578063371fd8e614610184578063485cc955146101a45780635a688803146101c457806367b025fb146101ed57600080fd5b8062f714ce14610102578063020bb757146101245780631627d3f2146101445780631ab69d111461016457600080fd5b366100fd57005b600080fd5b34801561010e57600080fd5b5061012261011d366004611c85565b61032d565b005b34801561013057600080fd5b5061012261013f366004611c55565b6103b2565b34801561015057600080fd5b5061012261015f366004611ace565b6103ce565b34801561017057600080fd5b5061012261017f366004611c55565b610580565b34801561019057600080fd5b5061012261019f366004611c55565b6105de565b3480156101b057600080fd5b506101226101bf366004611a76565b610808565b3480156101d057600080fd5b506101da60975481565b6040519081526020015b60405180910390f35b3480156101f957600080fd5b5060995461020d906001600160a01b031681565b6040516001600160a01b0390911681526020016101e4565b610122610233366004611c85565b610979565b34801561024457600080fd5b506101226109c3565b34801561025957600080fd5b5060985461020d906001600160a01b031681565b34801561027957600080fd5b506101da609a5481565b34801561028f57600080fd5b506033546001600160a01b031661020d565b3480156102ad57600080fd5b5061020d6102bc366004611a5a565b609c602052600090815260409020546001600160a01b031681565b3480156102e357600080fd5b5061020d6102f2366004611a5a565b609b602052600090815260409020546001600160a01b031681565b34801561031957600080fd5b50610122610328366004611a5a565b6109d7565b600260655414156103595760405162461bcd60e51b815260040161035090611dc7565b60405180910390fd5b6002606555610369818333610a50565b60405182815233906001600160a01b038316907f93cb7b4ba12c5bb07f02e52c4e43788d8f4db1e66e9d30aaaeffc5ab325b810c9060200160405180910390a350506001606555565b6103ba610c20565b6127108111156103c957600080fd5b609755565b6103d6610c20565b600260655414156103f95760405162461bcd60e51b815260040161035090611dc7565b60026065556001600160a01b038381166000908152609b602052604090205416156104375760405163dc0d0aab60e01b815260040160405180910390fd5b6001600160a01b038216158061045457506001600160a01b038316155b156104725760405163d92e233d60e01b815260040160405180910390fd5b60985460009061048a906001600160a01b0316610c7a565b6001600160a01b038086166000908152609b6020908152604080832080548587166001600160a01b03199182168117909255609c909352928190208054948916949092169390931790559051630b127b6360e11b815291925090631624f6c6906104fc90899089908790600401611d43565b600060405180830381600087803b15801561051657600080fd5b505af115801561052a573d6000803e3d6000fd5b50505050806001600160a01b03167f4f73161f318e19bf36a0ab5272ee6195937ebb4ab1c8f49499cf5057e348113a87878560405161056b93929190611d43565b60405180910390a25050600160655550505050565b610588610c20565b609a548114156105ab57604051633321f1e760e21b815260040160405180910390fd5b609a81905560405181907f506d6c6b51bc8c5eb7977a5d7bf100806018f28a2d1916615c60075f247f413290600090a250565b600260655414156106015760405162461bcd60e51b815260040161035090611dc7565b6002606555604051636eb1769f60e11b8152306004820152737d2768de32b0b80b7a3454c06bdac94a69ddc7a96024820152819073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb489063dd62ed3e9060440160206040518083038186803b15801561066c57600080fd5b505afa158015610680573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a49190611c6d565b10156107535760405163095ea7b360e01b8152737d2768de32b0b80b7a3454c06bdac94a69ddc7a96004820152600019602482015273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb489063095ea7b390604401602060405180830381600087803b15801561071257600080fd5b505af1158015610726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074a9190611aae565b61075357600080fd5b60405163573ade8160e01b815273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4860048201526024810182905260026044820152306064820152737d2768de32b0b80b7a3454c06bdac94a69ddc7a99063573ade8190608401602060405180830381600087803b1580156107c757600080fd5b505af11580156107db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ff9190611c6d565b50506001606555565b600054610100900460ff16158080156108285750600054600160ff909116105b806108425750303b158015610842575060005460ff166001145b6108a55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610350565b6000805460ff1916600117905580156108c8576000805461ff0019166101001790555b6108d0610ccc565b6108d8610cfb565b6001600160a01b0382166108eb57600080fd5b6001600160a01b0383166108fe57600080fd5b609880546001600160a01b038085166001600160a01b03199283161790925560998054928616929091169190911790558015610974576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6002606554141561099c5760405162461bcd60e51b815260040161035090611dc7565b600260655560006109ad8284610d2a565b90506109b98282610ee6565b5050600160655550565b6109cb610c20565b6109d56000611029565b565b6109df610c20565b6001600160a01b038116610a445760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610350565b610a4d81611029565b50565b81610a6e57604051631f2a200560e01b815260040160405180910390fd5b6001600160a01b038316610a955760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b038381166000908152609b602052604090205416610acd57604051634847234360e01b815260040160405180910390fd5b6001600160a01b038381166000908152609b6020526040908190205490516370a0823160e01b815233600482015291169081906370a0823190602401602060405180830381600087803b158015610b2357600080fd5b505af1158015610b37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5b9190611c6d565b831115610b7b5760405163569d45cf60e11b815260040160405180910390fd5b604051632770a7eb60e21b8152336004820152602481018490526001600160a01b03821690639dc29fac90604401600060405180830381600087803b158015610bc357600080fd5b505af1158015610bd7573d6000803e3d6000fd5b505050506001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610c0f57610c0a838361107b565b610c1a565b610c1a84848461124c565b50505050565b6033546001600160a01b031633146109d55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610350565b6000808260601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f0949350505050565b600054610100900460ff16610cf35760405162461bcd60e51b815260040161035090611d7c565b6109d5611422565b600054610100900460ff16610d225760405162461bcd60e51b815260040161035090611d7c565b6109d5611452565b600081610d4a57604051631f2a200560e01b815260040160405180910390fd5b6001600160a01b038316610d715760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b038381166000908152609b602052604090205416610da957604051634847234360e01b815260040160405180910390fd5b3415610db3573491505b6000612710610dc4846103e8611f33565b610dce9190611e28565b90506000610ddc8285611f52565b90506001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee148015610e0a5750600034115b15610e1e57610e198183611480565b610e34565b3415610e2957600080fd5b610e34858284611541565b6001600160a01b038581166000908152609b6020526040908190205490516340c10f1960e01b8152336004820152602481018790529116906340c10f1990604401600060405180830381600087803b158015610e8f57600080fd5b505af1158015610ea3573d6000803e3d6000fd5b50506040518681523392507f2d8a08b6430a894aea608bcaa6013d5d3e263bc49110605e4d4ba76930ae5c29915060200160405180910390a29150505b92915050565b6000610ef28383611785565b60405163a415bcad60e01b815273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486004820152602481018290526002604482015260006064820152306084820152909150737d2768de32b0b80b7a3454c06bdac94a69ddc7a99063a415bcad9060a401600060405180830381600087803b158015610f7057600080fd5b505af1158015610f84573d6000803e3d6000fd5b505060995460405163a9059cbb60e01b81526001600160a01b0390911660048201526024810184905273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48925063a9059cbb9150604401602060405180830381600087803b158015610fe857600080fd5b505af1158015610ffc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110209190611aae565b61097457600080fd5b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040516335ea6a7560e01b815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26004820152600090737d2768de32b0b80b7a3454c06bdac94a69ddc7a9906335ea6a75906024016101806040518083038186803b1580156110dd57600080fd5b505afa1580156110f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111159190611b69565b60e081015160405163095ea7b360e01b815273cc9a0b7c43dc2a5f023bb9b738e45b0ef6b06e046004820152602481018690529192506001600160a01b03169063095ea7b390604401602060405180830381600087803b15801561117857600080fd5b505af115801561118c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b09190611aae565b6111b957600080fd5b604051630402806960e51b8152737d2768de32b0b80b7a3454c06bdac94a69ddc7a96004820152602481018490526001600160a01b038316604482015273cc9a0b7c43dc2a5f023bb9b738e45b0ef6b06e04906380500d2090606401600060405180830381600087803b15801561122f57600080fd5b505af1158015611243573d6000803e3d6000fd5b50505050505050565b6040516335ea6a7560e01b81526001600160a01b0384166004820152600090737d2768de32b0b80b7a3454c06bdac94a69ddc7a9906335ea6a75906024016101806040518083038186803b1580156112a357600080fd5b505afa1580156112b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112db9190611b69565b60e081015160405163095ea7b360e01b8152737d2768de32b0b80b7a3454c06bdac94a69ddc7a96004820152602481018690529192506001600160a01b03169063095ea7b390604401602060405180830381600087803b15801561133e57600080fd5b505af1158015611352573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113769190611aae565b61137f57600080fd5b604051631a4ca37b60e21b81526001600160a01b0380861660048301526024820185905283166044820152737d2768de32b0b80b7a3454c06bdac94a69ddc7a9906369328dec90606401602060405180830381600087803b1580156113e357600080fd5b505af11580156113f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141b9190611c6d565b5050505050565b600054610100900460ff166114495760405162461bcd60e51b815260040161035090611d7c565b6109d533611029565b600054610100900460ff166114795760405162461bcd60e51b815260040161035090611d7c565b6001606555565b60405163474cf53d60e01b8152737d2768de32b0b80b7a3454c06bdac94a69ddc7a960048201523060248201526000604482015273cc9a0b7c43dc2a5f023bb9b738e45b0ef6b06e049063474cf53d9084906064016000604051808303818588803b1580156114ee57600080fd5b505af1158015611502573d6000803e3d6000fd5b50506099546040516001600160a01b03909116935084156108fc0292508491506000818181858888f19350505050158015610974573d6000803e3d6000fd5b6040516323b872dd60e01b81523360048201523060248201526044810183905283906001600160a01b038216906323b872dd90606401602060405180830381600087803b15801561159157600080fd5b505af11580156115a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c99190611aae565b6115d257600080fd5b60405163095ea7b360e01b8152737d2768de32b0b80b7a3454c06bdac94a69ddc7a96004820152602481018490526001600160a01b0382169063095ea7b390604401602060405180830381600087803b15801561162e57600080fd5b505af1158015611642573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116669190611aae565b61166f57600080fd5b60405163e8eda9df60e01b81526001600160a01b03821660048201526024810184905230604482015260006064820152737d2768de32b0b80b7a3454c06bdac94a69ddc7a99063e8eda9df90608401600060405180830381600087803b1580156116d857600080fd5b505af11580156116ec573d6000803e3d6000fd5b50506099546040516323b872dd60e01b81523360048201526001600160a01b0391821660248201526044810186905290841692506323b872dd9150606401602060405180830381600087803b15801561174457600080fd5b505af1158015611758573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061177c9190611aae565b610c1a57600080fd5b60006001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156117c45773c02aaa39b223fe8d0a0e5c4f27ead9083c756cc292505b6001600160a01b038084166000908152609c602052604081205490916117ea9116611863565b9050600061181261180d670de0b6b3a764000061180785886118e6565b906118f9565b611905565b905060006118258264e8d4a510006118f9565b9050600061183b6127106118078461203a6118e6565b9050611858612710611807609a54846118e690919063ffffffff16565b979650505050505050565b600080829050806001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156118a257600080fd5b505afa1580156118b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118da9190611ca9565b50919695505050505050565b60006118f28284611f33565b9392505050565b60006118f28284611e28565b600061191360086012611f52565b61191e90600a611e8b565b610ee09083611f33565b805161193381611f95565b919050565b600082601f830112611948578081fd5b813567ffffffffffffffff8082111561196357611963611f7f565b604051601f8301601f19908116603f0116810190828211818310171561198b5761198b611f7f565b816040528381528660208588010111156119a3578485fd5b8360208701602083013792830160200193909352509392505050565b6000602082840312156119d0578081fd5b6040516020810181811067ffffffffffffffff821117156119f3576119f3611f7f565b6040529151825250919050565b80516fffffffffffffffffffffffffffffffff8116811461193357600080fd5b805164ffffffffff8116811461193357600080fd5b805169ffffffffffffffffffff8116811461193357600080fd5b805161193381611faa565b600060208284031215611a6b578081fd5b81356118f281611f95565b60008060408385031215611a88578081fd5b8235611a9381611f95565b91506020830135611aa381611f95565b809150509250929050565b600060208284031215611abf578081fd5b815180151581146118f2578182fd5b600080600080600060a08688031215611ae5578081fd5b853567ffffffffffffffff80821115611afc578283fd5b611b0889838a01611938565b96506020880135915080821115611b1d578283fd5b50611b2a88828901611938565b9450506040860135611b3b81611f95565b92506060860135611b4b81611f95565b91506080860135611b5b81611faa565b809150509295509295909350565b60006101808284031215611b7b578081fd5b611b83611dfe565b611b8d84846119bf565b8152611b9b60208401611a00565b6020820152611bac60408401611a00565b6040820152611bbd60608401611a00565b6060820152611bce60808401611a00565b6080820152611bdf60a08401611a00565b60a0820152611bf060c08401611a20565b60c0820152611c0160e08401611928565b60e0820152610100611c14818501611928565b90820152610120611c26848201611928565b90820152610140611c38848201611928565b90820152610160611c4a848201611a4f565b908201529392505050565b600060208284031215611c66578081fd5b5035919050565b600060208284031215611c7e578081fd5b5051919050565b60008060408385031215611c97578182fd5b823591506020830135611aa381611f95565b600080600080600060a08688031215611cc0578081fd5b611cc986611a35565b9450602086015193506040860151925060608601519150611cec60808701611a35565b90509295509295909350565b60008151808452815b81811015611d1d57602081850181015186830182015201611d01565b81811115611d2e5782602083870101525b50601f01601f19169290920160200192915050565b606081526000611d566060830186611cf8565b8281036020840152611d688186611cf8565b91505060ff83166040830152949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b604051610180810167ffffffffffffffff81118282101715611e2257611e22611f7f565b60405290565b600082611e4357634e487b7160e01b81526012600452602481fd5b500490565b600181815b80851115611e83578160001904821115611e6957611e69611f69565b80851615611e7657918102915b93841c9390800290611e4d565b509250929050565b60006118f28383600082611ea157506001610ee0565b81611eae57506000610ee0565b8160018114611ec45760028114611ece57611eea565b6001915050610ee0565b60ff841115611edf57611edf611f69565b50506001821b610ee0565b5060208310610133831016604e8410600b8410161715611f0d575081810a610ee0565b611f178383611e48565b8060001904821115611f2b57611f2b611f69565b029392505050565b6000816000190483118215151615611f4d57611f4d611f69565b500290565b600082821015611f6457611f64611f69565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610a4d57600080fd5b60ff81168114610a4d57600080fdfea2646970667358221220e95161d63bfba0bca4b89605638e754dab65abd2aeaa7a1cac63ef99f52cfedb64736f6c63430008040033";

export class Cruize__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Cruize> {
    return super.deploy(overrides || {}) as Promise<Cruize>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Cruize {
    return super.attach(address) as Cruize;
  }
  connect(signer: Signer): Cruize__factory {
    return super.connect(signer) as Cruize__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CruizeInterface {
    return new utils.Interface(_abi) as CruizeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Cruize {
    return new Contract(address, _abi, signerOrProvider) as Cruize;
  }
}
